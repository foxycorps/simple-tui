var e,t=Object.defineProperty,s=Object.getOwnPropertyDescriptor,r=Object.getOwnPropertyNames,n=Object.prototype.hasOwnProperty,i={};((e,s)=>{for(var r in s)t(e,r,{get:s[r],enumerable:!0})})(i,{CTRL_C:()=>a,CTRL_D:()=>h,CTRL_L:()=>c,ESC:()=>o,Screen:()=>y,clear:()=>l,default:()=>u}),module.exports=(e=i,((e,i,a,c)=>{if(i&&"object"==typeof i||"function"==typeof i)for(let h of r(i))n.call(e,h)||h===a||t(e,h,{get:()=>i[h],enumerable:!(c=s(i,h))||c.enumerable});return e})(t({},"__esModule",{value:!0}),e));var a="",c="\f",h="",o="ESC",l=()=>{process.stdout.write("win32"===process.platform?"[2J[0f":"[2J[3J[H")},d=class{constructor(e){this.onPress=e}isIntercepting=!1;isHandlingKeyPress=!1;createInteractionListener(){let e=!1;return({pause:t})=>{t?(e=this.isIntercepting,this.stopIntercepting()):e&&this.startIntercepting()}}handleKeyPress=async e=>{if(!this.isHandlingKeyPress||e===a){this.isHandlingKeyPress=!0;try{await this.onPress(127===e.charCodeAt(0)?"ESC":e)}catch(e){console.error(e)}finally{this.isHandlingKeyPress=!1}}};startIntercepting(){if(this.isIntercepting)return;this.isIntercepting=!0;const{stdin:e}=process;e.setRawMode&&(e.setRawMode(!0),e.resume(),e.setEncoding("utf8"),e.on("data",this.handleKeyPress))}stopIntercepting(){if(!this.isIntercepting)return;this.isIntercepting=!1;const{stdin:e}=process;e.removeListener("data",this.handleKeyPress),e.setRawMode&&(e.setRawMode(!1),e.resume())}},p=class{constructor(e){this.listener=e}pause(){this.listener({pause:!0})}resume(){this.listener({pause:!1})}},y=class{constructor(e){this.name=e}handleKeys(e){}render(){}get screenName(){return this.name}},u=class e{static currentMenu=0;static keyHandler;static screenStack=[];static registry;static keyPressHandler;static listener;static registerScreen(e){this.screenStack.push(e)}static registerMainMenu(e){this.screenStack.unshift(e)}static changeScreen(t){if("string"==typeof t){let e=this.screenStack.findIndex((e=>e.screenName===t));if(-1===e)throw new Error(`Could not find screen with name: ${t}`);t=e}this.currentMenu=t,this.display(),e.keyHandler=this.screenStack[t].handleKeys}static start(){if(!this.screenStack.length)throw new Error("No screens have been registered.");e.display(),this.keyPressHandler=new d(this.handleKeyPress),this.listener=this.keyPressHandler.createInteractionListener(),this.registry=new p(this.listener),this.keyPressHandler.startIntercepting(),this.keyHandler=this.screenStack[0].handleKeys,this.display()}static display(){l(),this.screenStack[this.currentMenu].render()}static async handleKeyPress(t){switch(t){case c:return e.display();case a:case h:e.registry.pause();try{process.emit("SIGINT"),process.exit()}catch(e){throw e}}e.keyHandler(t)}};//# sourceMappingURL=index.js.map