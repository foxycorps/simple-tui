var e="",s="\f",t="",r="ESC",n=()=>{process.stdout.write("win32"===process.platform?"[2J[0f":"[2J[3J[H")},i=class{constructor(e){this.onPress=e}isIntercepting=!1;isHandlingKeyPress=!1;createInteractionListener(){let e=!1;return({pause:s})=>{s?(e=this.isIntercepting,this.stopIntercepting()):e&&this.startIntercepting()}}handleKeyPress=async e=>{if(!this.isHandlingKeyPress||""===e){this.isHandlingKeyPress=!0;try{await this.onPress(127===e.charCodeAt(0)?"ESC":e)}catch(e){console.error(e)}finally{this.isHandlingKeyPress=!1}}};startIntercepting(){if(this.isIntercepting)return;this.isIntercepting=!0;const{stdin:e}=process;e.setRawMode&&(e.setRawMode(!0),e.resume(),e.setEncoding("utf8"),e.on("data",this.handleKeyPress))}stopIntercepting(){if(!this.isIntercepting)return;this.isIntercepting=!1;const{stdin:e}=process;e.removeListener("data",this.handleKeyPress),e.setRawMode&&(e.setRawMode(!1),e.resume())}},a=class{constructor(e){this.listener=e}pause(){this.listener({pause:!0})}resume(){this.listener({pause:!1})}},c=class{constructor(e){this.name=e}handleKeys(e){}render(){}get screenName(){return this.name}},h=class e{static currentMenu=0;static keyHandler;static screenStack=[];static registry;static keyPressHandler;static listener;static registerScreen(e){this.screenStack.push(e)}static registerMainMenu(e){this.screenStack.unshift(e)}static changeScreen(s){if("string"==typeof s){let e=this.screenStack.findIndex((e=>e.screenName===s));if(-1===e)throw new Error(`Could not find screen with name: ${s}`);s=e}this.currentMenu=s,this.display(),e.keyHandler=this.screenStack[s].handleKeys}static start(){if(!this.screenStack.length)throw new Error("No screens have been registered.");e.display(),this.keyPressHandler=new i(this.handleKeyPress),this.listener=this.keyPressHandler.createInteractionListener(),this.registry=new a(this.listener),this.keyPressHandler.startIntercepting(),this.keyHandler=this.screenStack[0].handleKeys,this.display()}static display(){n(),this.screenStack[this.currentMenu].render()}static async handleKeyPress(s){switch(s){case"\f":return e.display();case"":case"":e.registry.pause();try{process.emit("SIGINT"),process.exit()}catch(e){throw e}}e.keyHandler(s)}};export{e as CTRL_C,t as CTRL_D,s as CTRL_L,r as ESC,c as Screen,n as clear,h as default};//# sourceMappingURL=index.mjs.map